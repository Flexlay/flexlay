# -*- python -*-

env = Environment(CPPPATH=['API', '.'])
    
#    CXXFLAGS  = env['CXXFLAGS'] + clanLib_env['CCFLAGS'],
#    LINKFLAGS = clanLib_env['LINKFLAGS'],
#    LIBPATH=['$USER_LIBPATH'] + clanLib_env['LIBPATH'],
#    LIBS = clanLib_env['LIBS']

clanApp = env.StaticLibrary(
    target = 'libclanApp.a',
    source = [
    'Application/Unix/clanapp.cpp'
    ])

clanCore = env.StaticLibrary(
    target = 'libclanCore.a',
    source = [
    'Core/core_iostream.cpp',
    'Core/IOData/Generic/datafile_inputprovider.cpp',
    'Core/IOData/Generic/directory.cpp',
    'Core/IOData/Generic/directory_scanner.cpp',
    'Core/IOData/Generic/endianess.cpp',
    'Core/IOData/Generic/inputsource.cpp',
    'Core/IOData/Generic/inputsource_file.cpp',
    'Core/IOData/Generic/inputsource_memory_generic.cpp',
    'Core/IOData/Generic/inputsource_provider_file.cpp',
    'Core/IOData/Generic/inputsource_zipped.cpp',
    'Core/IOData/Generic/outputsource.cpp',
    'Core/IOData/Generic/outputsource_file.cpp',
    'Core/IOData/Generic/outputsource_memory_generic.cpp',
    'Core/IOData/Generic/outputsource_zipped.cpp',
    'Core/IOData/inputsource_memory.cpp',
    'Core/IOData/inputsource_zip_fileentry.cpp',
    'Core/IOData/outputsource_memory.cpp',
    'Core/IOData/zip_64_end_of_central_directory_locator.cpp',
    'Core/IOData/zip_64_end_of_central_directory_record.cpp',
    'Core/IOData/zip_archive.cpp',
    'Core/IOData/zip_digital_signature.cpp',
    'Core/IOData/zip_end_of_central_directory_record.cpp',
    'Core/IOData/zip_file_entry.cpp',
    'Core/IOData/zip_file_header.cpp',
    'Core/IOData/zip_local_file_descriptor.cpp',
    'Core/IOData/zip_local_file_header.cpp',
    'Core/Math/matrix4x4.cpp',
    'Core/Math/cl_vector.cpp',
    'Core/Math/line_math.cpp',
    'Core/Math/triangle_math.cpp',
    'Core/Math/pointset_math.cpp',
    'Core/Math/origin.cpp',
    'Core/Math/rect.cpp',
    'Core/Math/quad.cpp',
    'Core/Math/vector2.cpp',
    'Core/Math/number_pool.cpp',
    'Core/Math/delauney_triangulator.cpp',
    'Core/Math/delauney_triangulator_generic.cpp',
    'Core/Math/outline_triangulator.cpp',
    'Core/Math/outline_triangulator_generic.cpp',
    'Core/Resources/resource.cpp',
    'Core/Resources/resource_generic.cpp',
    'Core/Resources/resource_manager.cpp',
    'Core/Resources/resource_manager_generic.cpp',
    'Core/Resources/resourcedata.cpp',
    'Core/Resources/resourcetype_boolean.cpp',
    'Core/Resources/resourcetype_integer.cpp',
    'Core/Resources/resourcetype_float.cpp',
    'Core/Resources/resourcetype_raw.cpp',
    'Core/Resources/resourcetype_string.cpp',
    'Core/System/Generic/cl_assert.cpp',
    'Core/System/Generic/clanstring.cpp',
    'Core/System/Generic/command_line.cpp',
    'Core/System/Generic/command_line_generic.cpp',
    'Core/System/Generic/console_window.cpp',
    'Core/System/Generic/console_window_generic.cpp',
    'Core/System/Generic/detect_3dnow.cpp',
    'Core/System/Generic/detect_mmx.cpp',
    'Core/System/Generic/error.cpp',
    'Core/System/Generic/event_listener.cpp',
    'Core/System/Generic/event_listener_generic.cpp',
    'Core/System/Generic/event_trigger.cpp',
    'Core/System/Generic/event_trigger_generic.cpp',
    'Core/System/Generic/keep_alive_generic.cpp',
    'Core/System/Generic/setupcore.cpp',
    'Core/System/Generic/timer_generic.cpp',
    'Core/System/Generic/log.cpp',
    'Core/System/Generic/call_stack.cpp',
    'Core/System/Generic/crash_reporter.cpp',
    'Core/XML/dom_attr.cpp',
    'Core/XML/dom_cdata_section.cpp',
    'Core/XML/dom_character_data.cpp',
    'Core/XML/dom_comment.cpp',
    'Core/XML/dom_document.cpp',
    'Core/XML/dom_document_fragment.cpp',
    'Core/XML/dom_document_generic.cpp',
    'Core/XML/dom_document_type.cpp',
    'Core/XML/dom_element.cpp',
    'Core/XML/dom_entity.cpp',
    'Core/XML/dom_entity_reference.cpp',
    'Core/XML/dom_exception.cpp',
    'Core/XML/dom_implementation.cpp',
    'Core/XML/dom_named_node_map.cpp',
    'Core/XML/dom_node.cpp',
    'Core/XML/dom_node_list.cpp',
    'Core/XML/dom_notation.cpp',
    'Core/XML/dom_processing_instruction.cpp',
    'Core/XML/dom_text.cpp',
    'Core/XML/xml_tokenizer.cpp',
    'Core/XML/xml_token_load.cpp',
    'Core/XML/xml_token_save.cpp',
    'Core/XML/xml_writer.cpp',
    'Core/precomp.cpp',
    'Core/System/Unix/event_listener_unix.cpp',
    'Core/System/Unix/event_trigger_unix.cpp',
    'Core/System/Unix/init_linux.cpp',
    'Core/System/Unix/mutex_pthread.cpp',
    'Core/System/Unix/thread_pthread.cpp',
    'Core/System/Unix/cl_library.cpp',
    'Core/System/Unix/crash_reporter_unix.cpp',
    'Core/IOData/Unix/directory_scanner_unix.cpp'
    ])

clanDisplay = env.StaticLibrary(
    target = 'libclanDisplay.a',
    source = [
    'Display/display_target.cpp',
    'Display/display_precomp.h',
    'Display/surface.cpp',
    'Display/canvas.cpp',
    'Display/canvas_generic.h',
    'Display/color.cpp',
    'Display/display_iostream.cpp',
    'Display/display_mode.cpp',
    'Display/display_window.cpp',
    'Display/sprite_packer.cpp',
    'Display/surface_generic.cpp',
    'Display/setupdisplay.cpp',
    'Display/input_device_generic.h',
    'Display/sprite.cpp',
    'Display/graphic_context.cpp',
    'Display/graphic_context_generic.cpp',
    'Display/pixel_buffer_memory.h',
    'Display/display.cpp',
    'Display/display_window_description.cpp',
    'Display/font.cpp',
    'Display/font_target_sprite.cpp',
    'Display/keyboard.cpp',
    'Display/joystick.cpp',
    'Display/mouse.cpp',
    'Display/sprite_description.cpp',
    'Display/input_buffer.cpp',
    'Display/input_buffer_generic.h',
    'Display/input_button.cpp',
    'Display/input_button_generic.cpp',
    'Display/input_device_generic.cpp',
    'Display/input_context_generic.cpp',
    'Display/input_event.cpp',
    'Display/surface_target.cpp',
    'Display/display_precomp.cpp',
    'Display/input_device.cpp',
    'Display/key_binding.cpp',
    'Display/resourcedata_collisionoutline.cpp',
    'Display/resourcedata_font.cpp',
    'Display/resourcedata_text_styler.cpp',
    'Display/Providers/jpeg_provider.cpp',
    'Display/Providers/jpeg_provider_generic.cpp',
    'Display/Providers/jpeg_provider_generic.h',
    'Display/Providers/pcx_provider.cpp',
    'Display/Providers/pcx_provider_generic.cpp',
    'Display/Providers/pcx_provider_generic.h',
    'Display/Providers/png_provider.cpp',
    'Display/Providers/png_provider_generic.h',
    'Display/Providers/png_provider_generic.cpp',
    'Display/Providers/provider_factory.cpp',
    'Display/Providers/provider_type.cpp',
    'Display/Providers/targa_provider.cpp',
    'Display/Providers/targa_provider_generic.cpp',
    'Display/Providers/targa_provider_generic.h',
    'Display/input_context_generic.h',
    'Display/sprite_packer_generic.cpp',
    'Display/sprite_generic.cpp',
    'Display/pixel_format.cpp',
    'Display/pixel_buffer.cpp',
    'Display/pixel_buffer_generic.cpp',
    'Display/pixel_buffer_generic.h',
    'Display/pixel_buffer_memory.cpp',
    'Display/display_window_generic.h',
    'Display/sprite_generic.h',
    'Display/font_generic.h',
    'Display/font_target_sprite.h',
    'Display/surface_generic.h',
    'Display/sprite_packer_generic.h',
    'Display/font_generic.cpp',
    'Display/sprite_description_generic.h',
    'Display/resourcedata_surface.cpp',
    'Display/resourcedata_sprite.cpp',
    'Display/resourcedata_sprite_description.cpp',
    'Display/surface_target.h',
    'Display/input_context.cpp',
    'Display/display_window_generic.cpp',
    'Display/glyph_buffer.cpp',
    'Display/text_styler.cpp',
    'Display/frameratecounter.cpp',
    'Display/frameratecounter_generic.h',
    'Display/Collision/collision_outline.cpp',
    'Display/Collision/collision_outline_generic.cpp',
    'Display/Collision/collision_outline_generic.h',
    'Display/Collision/outline_math.cpp',
    'Display/Collision/outline_provider_bitmap.cpp',
    'Display/Collision/outline_provider_bitmap_generic.cpp',
    'Display/Collision/outline_provider_bitmap_generic.h',
    'Display/Collision/outline_provider_file.cpp',
    'Display/Collision/outline_provider_file_generic.cpp',
    ])

# -L/usr/X11R6/lib/ -lX11 -lXmu -lGL -lGLU -lpng -ljpeg -lXxf86vm @X_LIBS@

clanGL = env.StaticLibrary(
    target = 'libclanGL.a',
    source = [
    'GL/graphic_context_opengl.cpp',
    'GL/graphic_context_opengl.h',
    'GL/gl_state_checker.cpp',
    'GL/pixel_buffer_opengl_texture.cpp',
    'GL/pixel_buffer_opengl_texture.h',
    'GL/opengl.cpp',
    'GL/opengl_target.cpp',
    'GL/opengl_target.h',
    'GL/opengl_window.cpp',
    'GL/opengl_window_description.cpp',
    'GL/opengl_window_description_generic.h',
    'GL/setupgl.cpp',
    'GL/opengl_surface.cpp',
    'GL/surface_target_opengl.cpp',
    'GL/surface_target_opengl.h',
    'GL/canvas_opengl.cpp',
    'GL/canvas_opengl.h',
    'GL/opengl_state.cpp',
    'GL/opengl_state_generic.cpp',
    'GL/opengl_state_generic.h',
    'GL/opengl_state_data.cpp',
    'GL/viewpoint.cpp',
    'GL/light_source.cpp',
    'GL/shader_object.cpp',
    'GL/program_object.cpp',
    'GL/program_attribute.cpp',
    'GL/program_uniform.cpp',
    'GL/texture.cpp',
    'GL/GLX/display_window_opengl.h',
    'GL/GLX/display_window_opengl.cpp',
    'GL/GLX/input_device_linuxjoystick.cpp',
    'GL/GLX/input_device_linuxjoystick.h',
    'GL/GLX/input_device_linuxevent.cpp',
    'GL/GLX/input_device_linuxevent.h',
    'GL/GLX/input_device_linuxusbmouse.cpp',
    'GL/GLX/input_device_linuxusbmouse.h',
    'GL/GLX/display_window_opengl.h',
    'GL/GLX/input_device_x11mouse.cpp',
    'GL/GLX/input_device_x11mouse.h',
    'GL/GLX/input_device_x11keyboard.cpp',
    'GL/GLX/input_device_x11keyboard.h',
    'GL/GLX/input_device_xinput.cpp',
    'GL/GLX/input_device_xinput.h'
    ])

clanGUI = env.StaticLibrary(
    target = 'libclanGUI.a',
    source = [
    'GUI/frame_generic.cpp',
    'GUI/treeview_generic.h',
    'GUI/component_manager.cpp',
    'GUI/frame.cpp',
    'GUI/image_generic.h',
    'GUI/button_generic.h',
    'GUI/listbox_generic.h',
    'GUI/radiogroup.cpp',
    'GUI/progressbar_generic.cpp',
    'GUI/component_manager_generic.h',
    'GUI/radiogroup_generic.h',
    'GUI/gui_manager.cpp',
    'GUI/component_generic.h',
    'GUI/stylemanager.cpp',
    'GUI/scrollbar_generic.cpp',
    'GUI/inputbox_generic.cpp',
    'GUI/inputdialog.cpp',
    'GUI/inputdialog_generic.cpp',
    'GUI/label.cpp',
    'GUI/precomp.h',
    'GUI/gui_manager_generic.h',
    'GUI/scrollbar_generic.h',
    'GUI/listbox.cpp',
    'GUI/inputbox.cpp',
    'GUI/image_generic.cpp',
    'GUI/component_resize_handler.cpp',
    'GUI/treenode_generic.cpp',
    'GUI/filedialog_generic.cpp',
    'GUI/inputbox_generic.h',
    'GUI/button.cpp',
    'GUI/component_manager_generic.cpp',
    'GUI/progressbar.cpp',
    'GUI/component.cpp',
    'GUI/component_type.cpp',
    'GUI/component_type_generic.h',
    'GUI/layout.cpp',
    'GUI/layout_generic.cpp',
    'GUI/layout_generic.h',
    'GUI/layout_item.cpp',
    'GUI/layout_item.h',
    'GUI/gui_manager_generic.cpp',
    'GUI/treenode_generic.h',
    'GUI/image.cpp',
    'GUI/button_generic.cpp',
    'GUI/default_component_types.h',
    'GUI/checkbox.cpp',
    'GUI/component_generic.cpp',
    'GUI/radiobutton.cpp',
    'GUI/messagebox_generic.cpp',
    'GUI/treeitem.cpp',
    'GUI/label_generic.cpp',
    'GUI/listbox_generic.cpp',
    'GUI/setupgui.cpp',
    'GUI/progressbar_generic.h',
    'GUI/messagebox.cpp',
    'GUI/scrollbar.cpp',
    'GUI/frame_generic.h',
    'GUI/radiogroup_generic.cpp',
    'GUI/label_generic.h',
    'GUI/component_move_handler.cpp',
    'GUI/treenode.cpp',
    'GUI/window.cpp',
    'GUI/window_generic.cpp',
    'GUI/treeview.cpp',
    'GUI/filedialog_generic.h',
    'GUI/treeitem_generic.cpp',
    'GUI/messagebox_generic.h',
    'GUI/treeitem_generic.h',
    'GUI/treeview_generic.cpp',
    'GUI/precomp.cpp',
    'GUI/filedialog.cpp',
    'GUI/window_generic.h',
    'GUI/menu_node_generic.h',
    'GUI/menu.cpp',
    'GUI/menu_node.cpp',
    'GUI/menu_node_generic.cpp',
    'GUI/menu_generic.h',
    'GUI/menu_generic.cpp',
    'GUI/menu_item.cpp',
    'GUI/menu_item_generic.cpp',
    'GUI/deck.cpp',
    'GUI/deck_generic.h',
    'GUI/deck_generic.cpp'
    ])

clanGUIStyleSilver = env.StaticLibrary(
    target = 'libclanGUIStyleSilver.a',
    source = [
    'GUIStyleSilver/button_silver.cpp',
    'GUIStyleSilver/label_silver.cpp',
    'GUIStyleSilver/scrollbar_silver.cpp',
    'GUIStyleSilver/checkbox_silver.cpp',
    'GUIStyleSilver/listbox_silver.cpp',
    'GUIStyleSilver/stylemanager_silver.cpp',
    'GUIStyleSilver/frame_silver.cpp',
    'GUIStyleSilver/image_silver.cpp',
    'GUIStyleSilver/progressbar_silver.cpp',
    'GUIStyleSilver/inputbox_silver.cpp',
    'GUIStyleSilver/radiobutton_silver.cpp',
    'GUIStyleSilver/window_silver.cpp',
    'GUIStyleSilver/menu_silver.cpp',
    'GUIStyleSilver/menu_node_silver.cpp',
    'GUIStyleSilver/menu_item_silver.cpp',
    'GUIStyleSilver/treeitem_silver.cpp',
    'GUIStyleSilver/treeview_silver.cpp',
    ])

clanSignals = env.StaticLibrary(
    target = 'libclanSignals.a',
    source = [
    'Signals/slot.cpp',
    'Signals/slot_generic.cpp'
    ])

# EOF #
